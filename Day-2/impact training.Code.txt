Static method:-

class Animal {
    static void eat() {
        System.out.println("Animal is eating");
    }
}
class Dog extends Animal {
    static void eat() {
        System.out.println("Dog is eating");
    }
}
public class Main {
    public static void main(String[] args) {
        Animal.eat();
        Dog.eat();
    }
}

class Demo {
    static {
        System.out.println("Static Block");
    }

    Demo() {
        System.out.println("Constructor");
    }
}
public class q2 {
    public static void main(String[] args) {
        Demo d1 = new Demo();
        Demo d2 = new Demo();
    }
}

# hcf code:-

class Demo{
    int hcf(int a, intb){
        if (b==0){
            return a;
        }else{
            return hcf(b,a%b);
        }
    }
}
class Main {
    public static void main(String[] args) {
        Demo obj = new Demo();
        int res = obj.hcf(18,12);
        System.out.println(res);
    }
}

# nth table:-
import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner sc= new Scanner(System.in);
        int n=sc.nextInt();
        for (int i=1;i<=10;i++){
            System.out.println(n+"*"+i+"="+(n*i));
        }
    }
}

# factorial of number:-
import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int fact=1;
        if (n == 1 || n == 0) {
            System.out.println(n);
        } else {
            for (int i = 1; i <= n; i++) {
                fact = fact*i;
            }
            System.out.println(fact);
        }
    }
}

# Fibonacci series:-
public class Main
{
	public static void main(String[] args) {
		int a=0;
		int b=1;
		System.out.println(a);
		System.out.println(b);
		for (int i=2;i<5;i++){
		    int c= a+b;
		    System.out.println(c);
		    a=b;
		    b=c;
		}
	}
}

#reverse of number:-

import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int reverse = 0,num;
		while (n!=0){
		    num= n%10;
		    reverse = reverse*10 + num;
		    n =n/10;
		}
		System.out.println(reverse);
	}
}

#pattern :-

public class Main
{
	public static void main(String[] args) {
		for (int i=0;i<4;i++){
		    System.out.print("*");
		}
		for (int i=1;i<5;i++){
		    for (int j=1;j<i;j++){
		        System.out.print(" ");
		    }
		    System.out.println("*");
		}
		for (int i=0;i<5;i++){
		    System.out.print("*");
		}
	}
}
